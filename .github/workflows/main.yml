name: CI to Docker Hub

on:
  push:
    branches: [ master ]

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
        
    
      - name: Check Out Repo 
        run: |
          echo "GIT_JAR_VERSION=1.0.1" >> $GITHUB_ENV
#          cat version.properties >> $GITHUB_ENV
#          echo ${{ secrets.DOCKER_HUB_USERNAME }}
#          echo "temp=yellow" >> $GITHUB_ENV


      - name: Retrieve version
        run: |
          pwd
          echo "::set-output name=TAG_NAME::$(cat my-app/pom.xml | grep -Po '(?<=Version>).*(?=</Version>)')"
          echo ${{ steps.version.outputs.TAG_NAME }}
        id: version
        
        
        
        
      - name: Check Out Repo 
        uses: actions/checkout@v2

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: '1.8'
      
      - name: change version
        run: python ./update_patch.py

      - name: Build with Maven
        run: |
          mvn -B package --file my-app/pom.xml
          mkdir staging && cp my-app/target/*.jar staging
       
      - uses: actions/upload-artifact@v2
        with:
          name: artifact
          path: staging

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1


#       - name: Assign release version from version.properties to Env variable
#         run: |
#             grep -oP -m 1 '(?<=<version>).*?(?=</version>)' my-app/pom.xml > version.properties
#             cat version.properties >> $GITHUB_ENV  
            
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/maven-hello-world:latest,${{ secrets.DOCKER_HUB_USERNAME }}/maven-hello-world:${{ steps.version.outputs.TAG_NAME }}


      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
